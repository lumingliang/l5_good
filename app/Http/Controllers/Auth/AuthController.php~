<?php namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
//use Illuminate\Contracts\Auth\Guard;
//use Illuminate\Contracts\Auth\Registrar;
//use Illuminate\Foundation\Auth\AuthenticatesAndRegistersUsers;
use xinfeng\Auth\loginRegister;
use Auth;
use Request;



class AuthController extends Controller {

	/*
	|--------------------------------------------------------------------------
	| Registration & Login Controller
	|--------------------------------------------------------------------------
	|
	| This controller handles the registration of new users, as well as the
	| authentication of existing users. By default, this controller uses
	| a simple trait to add these behaviors. Why don't you explore it?
	|
	*/

	//use AuthenticatesAndRegistersUsers;

	/**
	 * Create a new authentication controller instance.
	 *
	 * @param  \Illuminate\Contracts\Auth\Guard  $auth
	 * @param  \Illuminate\Contracts\Auth\Registrar  $registrar
	 *@param  xinfeng\Auth\loginRegister $lR
	 * @return void
	 */

	protected $lR;
	//use loginRegister;

	public function __construct(loginRegister $lR)
	{
		$this->lR = $lR;
		//$this->registrar = $registrar;

		$this->middleware('guest', ['except' => 'getLogout']);
	}

	public function getRegister()
	{
		return view('auth.register');
	}

	public function getLogin()
	{
		return view('auth.login');
	}

	public function getLogout()
	{
		$this->lR->logout();
	}

	public function postLogin () {

		//$this->lR->check();

		//return redirect()->route('red');

		/*if($this->lR->check() )
			return redirect()->intended('/');
			//return redirect('hh');
		else
			return redirect( 'auth/login' )
					->withInput(Request::only('email', 'remember'))
					->withErrors('认证失败');

		/*if ( Auth::attempt(['email' => Request::input('email') , 'password' => Request::input('password') ] ) )
        {
        	//echo 'jjj';
            
        }

       // echo '[[[[';


        return redirect( 'auth/login' )
					->withInput(Request::only('email', 'remember'))
					->withErrors('认证失败'); */ 
					
							if ( Auth::attempt(['email' => Request::input('email') , 'password' => Request::input('password') ] , true ) )
        {
            return redirect()->intended('home');
        }


	}

	public function postRegister() {

		$this->lR->register();
	}

	public function registerEmailCheck () {

		$this->lR->registerEmailCheck();
	}

}
